// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using gerenciador.api.Models;

#nullable disable

namespace gerenciador.api.Migrations
{
    [DbContext(typeof(NotaFiscalContext))]
    [Migration("20250218230448_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("gerenciador.api.Models.NotaFiscal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ChaveAcesso")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CnpjDestinatario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CnpjEmitente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CnpjTerceiro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CnpjTransportadora")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DataEmissao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DataEntradaSaida")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RazaoSocialDestinatario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RazaoSocialEmitente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RazaoSocialTerceiro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RazaoSocialTransportadora")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorAproxTributos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorCofins")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorDesconto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorFrete")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorIcms")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorIcmsSt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorIpi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorIss")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorLiquido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorOutrasDespesas")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorPis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorProdutos")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorRetido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorRetidoCofins")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorRetidoCsll")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorRetidoFunrural")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorRetidoIcms")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorRetidoInss")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorRetidoIrrf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorRetidoIss")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorRetidoPis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorSeguro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorTotal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Notas");
                });

            modelBuilder.Entity("gerenciador.api.Models.NotaFiscal", b =>
                {
                    b.OwnsMany("gerenciador.api.Models.Produto", "Produtos", b1 =>
                        {
                            b1.Property<int>("NotaFiscalId")
                                .HasColumnType("integer");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<int>("CFOP")
                                .HasColumnType("integer");

                            b1.Property<string>("Cest")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<long>("CodigoEAN")
                                .HasColumnType("bigint");

                            b1.Property<long>("CodigoEANTributo")
                                .HasColumnType("bigint");

                            b1.Property<string>("CodigoProduto")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Descricao")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<long>("NCM")
                                .HasColumnType("bigint");

                            b1.Property<int>("PedidoNumero")
                                .HasColumnType("integer");

                            b1.Property<double>("QuantidadeComercial")
                                .HasColumnType("double precision");

                            b1.Property<string>("UnidadeComercial")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("UnidadeTributo")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<double>("ValorDesconto")
                                .HasColumnType("double precision");

                            b1.Property<double>("ValorProduto")
                                .HasColumnType("double precision");

                            b1.HasKey("NotaFiscalId", "Id");

                            b1.ToTable("Produto");

                            b1.WithOwner()
                                .HasForeignKey("NotaFiscalId");

                            b1.OwnsOne("gerenciador.api.Models.Imposto", "Imposto", b2 =>
                                {
                                    b2.Property<int>("ProdutoNotaFiscalId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("ProdutoId")
                                        .HasColumnType("integer");

                                    b2.HasKey("ProdutoNotaFiscalId", "ProdutoId");

                                    b2.ToTable("Produto");

                                    b2.WithOwner()
                                        .HasForeignKey("ProdutoNotaFiscalId", "ProdutoId");

                                    b2.OwnsOne("gerenciador.api.Models.COFINS", "COFINS", b3 =>
                                        {
                                            b3.Property<int>("ImpostoProdutoNotaFiscalId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("ImpostoProdutoId")
                                                .HasColumnType("integer");

                                            b3.Property<string>("CST")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.Property<double>("PercentualCOFINS")
                                                .HasColumnType("double precision");

                                            b3.Property<double>("ValorBase")
                                                .HasColumnType("double precision");

                                            b3.Property<double>("ValorCOFINS")
                                                .HasColumnType("double precision");

                                            b3.HasKey("ImpostoProdutoNotaFiscalId", "ImpostoProdutoId");

                                            b3.ToTable("Produto");

                                            b3.WithOwner()
                                                .HasForeignKey("ImpostoProdutoNotaFiscalId", "ImpostoProdutoId");
                                        });

                                    b2.OwnsOne("gerenciador.api.Models.ICMS", "ICMS", b3 =>
                                        {
                                            b3.Property<int>("ImpostoProdutoNotaFiscalId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("ImpostoProdutoId")
                                                .HasColumnType("integer");

                                            b3.Property<double>("CST")
                                                .HasColumnType("double precision");

                                            b3.Property<double>("Origem")
                                                .HasColumnType("double precision");

                                            b3.Property<double>("PST")
                                                .HasColumnType("double precision");

                                            b3.Property<double>("ValorBaseSubstituicao")
                                                .HasColumnType("double precision");

                                            b3.Property<double>("ValorICMSSubstituto")
                                                .HasColumnType("double precision");

                                            b3.Property<double>("ValorICMSSubstitutoRetido")
                                                .HasColumnType("double precision");

                                            b3.HasKey("ImpostoProdutoNotaFiscalId", "ImpostoProdutoId");

                                            b3.ToTable("Produto");

                                            b3.WithOwner()
                                                .HasForeignKey("ImpostoProdutoNotaFiscalId", "ImpostoProdutoId");
                                        });

                                    b2.OwnsOne("gerenciador.api.Models.IPI", "IPI", b3 =>
                                        {
                                            b3.Property<int>("ImpostoProdutoNotaFiscalId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("ImpostoProdutoId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("CST")
                                                .HasColumnType("integer");

                                            b3.Property<int>("CodigoEnquadramento")
                                                .HasColumnType("integer");

                                            b3.Property<double>("QuantidadeUnidade")
                                                .HasColumnType("double precision");

                                            b3.Property<double>("ValorIPI")
                                                .HasColumnType("double precision");

                                            b3.Property<double>("ValorUnidade")
                                                .HasColumnType("double precision");

                                            b3.HasKey("ImpostoProdutoNotaFiscalId", "ImpostoProdutoId");

                                            b3.ToTable("Produto");

                                            b3.WithOwner()
                                                .HasForeignKey("ImpostoProdutoNotaFiscalId", "ImpostoProdutoId");
                                        });

                                    b2.OwnsOne("gerenciador.api.Models.PIS", "PIS", b3 =>
                                        {
                                            b3.Property<int>("ImpostoProdutoNotaFiscalId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("ImpostoProdutoId")
                                                .HasColumnType("integer");

                                            b3.Property<string>("CST")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.Property<double>("PercentualPIS")
                                                .HasColumnType("double precision");

                                            b3.Property<double>("ValorBase")
                                                .HasColumnType("double precision");

                                            b3.Property<double>("ValorPIS")
                                                .HasColumnType("double precision");

                                            b3.HasKey("ImpostoProdutoNotaFiscalId", "ImpostoProdutoId");

                                            b3.ToTable("Produto");

                                            b3.WithOwner()
                                                .HasForeignKey("ImpostoProdutoNotaFiscalId", "ImpostoProdutoId");
                                        });

                                    b2.Navigation("COFINS")
                                        .IsRequired();

                                    b2.Navigation("ICMS")
                                        .IsRequired();

                                    b2.Navigation("IPI")
                                        .IsRequired();

                                    b2.Navigation("PIS")
                                        .IsRequired();
                                });

                            b1.Navigation("Imposto")
                                .IsRequired();
                        });

                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
